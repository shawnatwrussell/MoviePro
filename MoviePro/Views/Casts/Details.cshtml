@model MoviePro.Models.Cast

@using MoviePro.Services
@inject IImageService _imageService

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Cast</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2"></dt>
        <dt class="col-sm-10">
            <img id="posterImage" class="img-fluid" src="@_imageService.DecodePoster(Model.Poster, Model.ContentType)" />
        </dt>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Department)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Department)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Character)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Character)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Order)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Order)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Movie)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Movie.Title)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
